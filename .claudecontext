# [项目名称] - AI助手上下文记忆

> 本文件用于跨对话保持项目上下文，每次新对话时请先阅读本文件

## 📌 项目核心信息

**项目名称**: [项目名称]
**项目定位**: [一句话描述项目定位]
**核心价值**: [项目的核心价值主张]

## 🏗️ 技术栈

### 后端
- [后端框架] (例如: FastAPI, Express, Spring Boot)
- [数据库] (例如: PostgreSQL, MongoDB)
- [缓存] (例如: Redis)
- [其他关键技术]

### 前端
- [前端框架] (例如: Next.js, Vue, React)
- [UI库] (例如: Tailwind CSS, Ant Design)
- [状态管理] (例如: Zustand, Redux)

### 其他
- [AI/ML工具]
- [部署平台]
- [第三方服务]

## 📊 数据库结构概览

### 核心表
1. **表名1** - 用途说明
2. **表名2** - 用途说明
3. **表名3** - 用途说明

[详细文档]: `docs/database-design.md`

## 🚀 项目状态

### ✅ 已完成
- [ ] 基础框架搭建
- [ ] 数据库设计
- [ ] 用户认证系统
- [ ] [其他已完成功能]

### 🚧 进行中
- [ ] [功能1]
- [ ] [功能2]

### 📋 待开发
- [ ] [计划功能1]
- [ ] [计划功能2]

## 🔑 重要决策记录

### 技术决策

#### 决策1: [技术选型名称]
- **决策**: 使用XXX而非YYY
- **时间**: YYYY-MM-DD
- **理由**:
  1. 理由1
  2. 理由2
  3. 理由3
- **替代方案**: YYY (被否决，原因是...)
- **影响**: 对项目的影响说明

### 架构决策

#### 决策1: [架构选择]
- **决策**: 采用XXX架构
- **理由**: ...
- **影响**: ...

## 📁 项目结构关键路径

```
project/
├── src/              # 源代码
├── docs/             # 技术文档
├── tests/            # 测试文件
├── scripts/          # 脚本工具
└── README.md         # 项目说明
```

## 🔧 开发环境

### 本地开发
- **前端**: http://localhost:3000
- **后端**: http://localhost:8000
- **数据库**: localhost:5432

### 默认账号
- **管理员**: admin / [密码]

## 🐛 已知问题

1. [问题描述] - 状态: [已解决/待解决]
2. [问题描述] - 状态: [已解决/待解决]

## 📝 常见操作

### 启动服务
```bash
# 启动开发环境
npm run dev

# 启动后端
cd backend && npm start
```

### 数据库操作
```bash
# 运行迁移
npm run migrate

# 回滚迁移
npm run migrate:rollback
```

## 🎯 下一步计划

### 短期目标 (本周)
- [ ] [目标1]
- [ ] [目标2]

### 中期目标 (本月)
- [ ] [目标1]
- [ ] [目标2]

### 长期目标 (3个月)
- [ ] [目标1]
- [ ] [目标2]

## 💡 重要提醒

1. **文档优先**: 遇到问题先查看 `docs/` 目录
2. **配置集中**: 所有配置都在 `.env` 文件
3. **测试优先**: 新功能必须编写测试
4. **代码规范**: 遵循项目的代码规范（见 `.clinerules`）

## 🔄 最后更新

**更新时间**: [YYYY-MM-DD]
**更新人**: [姓名]
**主要变更**:
- [变更1]
- [变更2]

**重要决策**:
- [决策记录]

**经验教训**:
- [经验1]
- [经验2]

---

**使用说明**:
1. 每次新对话时，AI助手会先阅读本文件了解项目上下文
2. 开发者在重大变更后应更新本文件
3. 本文件应该简洁明了，避免冗长细节（细节查看docs/目录）
